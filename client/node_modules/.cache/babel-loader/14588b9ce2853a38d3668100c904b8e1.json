{"ast":null,"code":"var _jsxFileName = \"/Users/justin/code/white-bear-fullstack/client/src/components/ui/LogIn.js\";\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { withRouter } from \"react-router-dom\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass LogIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailError: \"\",\n      passwordError: \"\",\n      hasEmailError: false,\n      hasPasswordError: false\n    };\n  } // email error messages\n\n\n  async setEmailState(emailInput) {\n    const lowerCasedEmailInput = emailInput.toLowerCase();\n    if (emailInput === \"\") this.setState({\n      emailError: \"Please enter your email address.\",\n      hasEmailError: true\n    });else if (EMAIL_REGEX.test(lowerCasedEmailInput) === false) {\n      this.setState({\n        emailError: \"Please enter a valid email address.\",\n        hasEmailError: true\n      });\n    } else {\n      this.setState({\n        emailError: \"\",\n        hasEmailError: false\n      });\n    }\n  }\n\n  checkHasLocalPart(passwordInput, emailInput) {\n    const localPart = emailInput.split(\"@\")[0];\n    if (localPart === \"\") return false;else if (localPart.length < 4) return false;else return passwordInput.includes(localPart);\n  } // password error messages\n\n\n  async setPasswordState(passwordInput, emailInput) {\n    if (passwordInput === \"\") {\n      this.setState({\n        passwordError: \"Please enter a password.\",\n        hasPasswordError: true\n      });\n    } else {\n      this.setState({\n        passwordError: \"\",\n        hasPasswordError: false\n      });\n    }\n  }\n\n  async validateAndCreateUser() {\n    // email cant be blank\n    // must have valid email regex\n    const emailInput = document.getElementById(\"login-email-input\").value;\n    const passwordInput = document.getElementById(\"login-password-input\").value;\n    await this.setEmailState(emailInput);\n    await this.setPasswordState(passwordInput, emailInput);\n\n    if (this.state.hasEmailError === false && this.state.hasPasswordError === false) {\n      const user = {\n        id: getUuid(),\n        email: emailInput,\n        password: hash(passwordInput),\n        createdAt: Date.now()\n      };\n      console.log(\"created user object for POST: \", user); // mimis api response\n\n      axios.get(\"https://raw.githubusercontent.com/jpilapil/white-bear-mpa/master/src/mock-data/user.json\").then(res => {\n        const currentUser = res.data;\n        console.log(currentUser);\n        this.props.dispatch({\n          type: actions.UPDATE_CURRENT_USER,\n          payload: res.data\n        });\n      }).catch(error => {\n        // handle error\n        console.log(error);\n      });\n      this.props.history.push(\"/create-answer\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-5 offset-lg-1  col-md-8 offset-md-2 col-10 offset-1 col-xl-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"inside-card\",\n      className: \"card mt-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-title \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Welcome back\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text-landing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Log in with your email address and password.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      htmlFor: \"login-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: classnames({\n        \"form-control\": true,\n        \"mb-2\": true,\n        \"is-invalid\": this.state.emailError\n      }),\n      id: \"login-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    })), this.state.hasEmailError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      htmlFor: \"login-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames({\n        \"form-control\": true,\n        \"mb-2\": true,\n        \"is-invalid\": this.state.hasPasswordError\n      }),\n      id: \"login-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), this.state.hasPasswordError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(\"button\", {\n      to: \"/create-answer\",\n      id: \"logIn\",\n      className: \"btn btn-success btn-lg btn-block btn-lg landing-Link mt-5\",\n      onClick: () => {\n        this.validateAndCreateUser();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, \"Log in\")))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // map state to props in local component\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps)(LogIn));","map":{"version":3,"sources":["/Users/justin/code/white-bear-fullstack/client/src/components/ui/LogIn.js"],"names":["React","classnames","hash","v4","getUuid","withRouter","EMAIL_REGEX","axios","actions","connect","LogIn","Component","constructor","props","state","emailError","passwordError","hasEmailError","hasPasswordError","setEmailState","emailInput","lowerCasedEmailInput","toLowerCase","setState","test","checkHasLocalPart","passwordInput","localPart","split","length","includes","setPasswordState","validateAndCreateUser","document","getElementById","value","user","id","email","password","createdAt","Date","now","console","log","get","then","res","currentUser","data","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","history","push","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { withRouter } from \"react-router-dom\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass LogIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailError: \"\",\n      passwordError: \"\",\n      hasEmailError: false,\n      hasPasswordError: false,\n    };\n  }\n\n  // email error messages\n  async setEmailState(emailInput) {\n    const lowerCasedEmailInput = emailInput.toLowerCase();\n\n    if (emailInput === \"\")\n      this.setState({\n        emailError: \"Please enter your email address.\",\n        hasEmailError: true,\n      });\n    else if (EMAIL_REGEX.test(lowerCasedEmailInput) === false) {\n      this.setState({\n        emailError: \"Please enter a valid email address.\",\n        hasEmailError: true,\n      });\n    } else {\n      this.setState({ emailError: \"\", hasEmailError: false });\n    }\n  }\n\n  checkHasLocalPart(passwordInput, emailInput) {\n    const localPart = emailInput.split(\"@\")[0];\n    if (localPart === \"\") return false;\n    else if (localPart.length < 4) return false;\n    else return passwordInput.includes(localPart);\n  }\n\n  // password error messages\n  async setPasswordState(passwordInput, emailInput) {\n    if (passwordInput === \"\") {\n      this.setState({\n        passwordError: \"Please enter a password.\",\n        hasPasswordError: true,\n      });\n    } else {\n      this.setState({ passwordError: \"\", hasPasswordError: false });\n    }\n  }\n\n  async validateAndCreateUser() {\n    // email cant be blank\n    // must have valid email regex\n    const emailInput = document.getElementById(\"login-email-input\").value;\n    const passwordInput = document.getElementById(\"login-password-input\").value;\n    await this.setEmailState(emailInput);\n    await this.setPasswordState(passwordInput, emailInput);\n    if (\n      this.state.hasEmailError === false &&\n      this.state.hasPasswordError === false\n    ) {\n      const user = {\n        id: getUuid(),\n        email: emailInput,\n        password: hash(passwordInput),\n        createdAt: Date.now(),\n      };\n      console.log(\"created user object for POST: \", user);\n      // mimis api response\n      axios\n        .get(\n          \"https://raw.githubusercontent.com/jpilapil/white-bear-mpa/master/src/mock-data/user.json\"\n        )\n        .then((res) => {\n          const currentUser = res.data;\n          console.log(currentUser);\n          this.props.dispatch({\n            type: actions.UPDATE_CURRENT_USER,\n            payload: res.data,\n          });\n        })\n        .catch((error) => {\n          // handle error\n          console.log(error);\n        });\n      this.props.history.push(\"/create-answer\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-lg-5 offset-lg-1  col-md-8 offset-md-2 col-10 offset-1 col-xl-4\">\n        <div id=\"inside-card\" className=\"card mt-6\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title \">Welcome back</h2>\n            <p className=\"card-text-landing\">\n              Log in with your email address and password.\n            </p>\n\n            <div className=\"form-group\">\n              <label className=\"text-muted\" htmlFor=\"login-email-input\">\n                Email address\n              </label>\n              <input\n                type=\"email\"\n                className={classnames({\n                  \"form-control\": true,\n                  \"mb-2\": true,\n                  \"is-invalid\": this.state.emailError,\n                })}\n                id=\"login-email-input\"\n              />\n            </div>\n            {this.state.hasEmailError && (\n              <p className=\"text-danger\">{this.state.emailError}</p>\n            )}\n            <div className=\"form-group\">\n              <label className=\"text-muted\" htmlFor=\"login-password-input\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                className={classnames({\n                  \"form-control\": true,\n                  \"mb-2\": true,\n                  \"is-invalid\": this.state.hasPasswordError,\n                })}\n                id=\"login-password-input\"\n              />\n              {this.state.hasPasswordError && (\n                <p className=\"text-danger\">{this.state.passwordError}</p>\n              )}\n\n              <button\n                to=\"/create-answer\"\n                id=\"logIn\"\n                className=\"btn btn-success btn-lg btn-block btn-lg landing-Link mt-5\"\n                onClick={() => {\n                  this.validateAndCreateUser();\n                }}\n              >\n                Log in\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  // map state to props in local component\n  return {};\n}\nexport default withRouter(connect(mapStateToProps)(LogIn));\n"]},"metadata":{},"sourceType":"module"}