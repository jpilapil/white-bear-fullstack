{"ast":null,"code":"var _jsxFileName = \"/Users/justin/code/white-bear-fullstack/client/src/components/pages/CreateImagery.js\";\nimport React from \"react\";\nimport saveIcon from \"../../icons/save.svg\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport { Link } from \"react-router-dom\";\nconst memoryCard = memoryCards[2];\nexport default class CreateImagery extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"in here\");\n    this.state = {\n      answerText: memoryCard.answer,\n      imageryText: memoryCard.imagery\n    };\n  }\n\n  checkTextLimit() {\n    if (this.state.answerText.length > MAX_CARD_CHARS || this.state.answerText.length === 0 || this.state.imageryText.length > MAX_CARD_CHARS || this.state.imageryText.length === 0) {\n      return true;\n    } else return false;\n  }\n\n  setImageryText(e) {\n    this.setState({\n      imageryText: e.target.value\n    });\n  }\n\n  setAnswerText(e) {\n    this.setState({\n      answerText: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppTemplate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"my-4 text-center text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Add memorable imagery\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"8\",\n      defaultValue: memoryCard.imagery,\n      autoFocus: true,\n      onChange: e => this.setImageryText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card bg-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"8\",\n      defaultValue: memoryCard.answer,\n      autoFocus: true,\n      onChange: e => this.setAnswerText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"float-right mt-2 mb-5 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.answerText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Bottom: \", this.state.answerText.length, \"/\", MAX_CARD_CHARS)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"float-left mt-2 mb-5 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.imageryText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Top: \", this.state.imageryText.length, \"/\", MAX_CARD_CHARS)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/create-answer\",\n      id: \"delete-imagery\",\n      className: \"btn btn-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Back to answer\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"all-cards\",\n      className: classnames(\"btn btn-lg btn-primary float-right\", {\n        disabled: this.checkTextLimit()\n      }),\n      id: \"save-imagery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: saveIcon,\n      width: \"20px\",\n      style: {\n        marginBottom: \"3px\"\n      },\n      className: \"mr-2\",\n      alt: \"save button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/justin/code/white-bear-fullstack/client/src/components/pages/CreateImagery.js"],"names":["React","AppTemplate","memoryCards","classnames","checkIsOver","MAX_CARD_CHARS","Link","memoryCard","CreateImagery","Component","constructor","props","console","log","state","answerText","answer","imageryText","imagery","checkTextLimit","length","setImageryText","e","setState","target","value","setAnswerText","render","disabled","saveIcon","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,qBAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,UAAU,GAAGL,WAAW,CAAC,CAAD,CAA9B;AAEA,eAAe,MAAMM,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA4C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAER,UAAU,CAACS,MADZ;AAEXC,MAAAA,WAAW,EAAEV,UAAU,CAACW;AAFb,KAAb;AAID;;AAEDC,EAAAA,cAAc,GAAG;AACf,QACE,KAAKL,KAAL,CAAWC,UAAX,CAAsBK,MAAtB,GAA+Bf,cAA/B,IACA,KAAKS,KAAL,CAAWC,UAAX,CAAsBK,MAAtB,KAAiC,CADjC,IAEA,KAAKN,KAAL,CAAWG,WAAX,CAAuBG,MAAvB,GAAgCf,cAFhC,IAGA,KAAKS,KAAL,CAAWG,WAAX,CAAuBG,MAAvB,KAAkC,CAJpC,EAKE;AACA,aAAO,IAAP;AACD,KAPD,MAOO,OAAO,KAAP;AACR;;AAEDC,EAAAA,cAAc,CAACC,CAAD,EAAI;AAChB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,WAAW,EAAEK,CAAC,CAACE,MAAF,CAASC;AAAxB,KAAd;AACD;;AAEDC,EAAAA,aAAa,CAACJ,CAAD,EAAI;AACf,SAAKC,QAAL,CAAc;AAAER,MAAAA,UAAU,EAAEO,CAAC,CAACE,MAAF,CAASC;AAAvB,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAIE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,YAAY,EAAEpB,UAAU,CAACW,OAF3B;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,QAAQ,EAAGI,CAAD,IAAO,KAAKD,cAAL,CAAoBC,CAApB,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF,eAiBE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,YAAY,EAAEf,UAAU,CAACS,MAF3B;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,QAAQ,EAAGM,CAAD,IAAO,KAAKI,aAAL,CAAmBJ,CAAnB,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAjBF,CAJF,eAkCE;AAAG,MAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAEnB,UAAU,CAAC;AACpB,uBAAeC,WAAW,CAAC,KAAKU,KAAL,CAAWC,UAAZ,EAAwBV,cAAxB;AADN,OAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKW,KAAKS,KAAL,CAAWC,UAAX,CAAsBK,MALjC,OAK0Cf,cAL1C,CADF,CAlCF,eA2CE;AAAG,MAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAEF,UAAU,CAAC;AACpB,uBAAeC,WAAW,CACxB,KAAKU,KAAL,CAAWG,WADa,EAExBZ,cAFwB;AADN,OAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQQ,KAAKS,KAAL,CAAWG,WAAX,CAAuBG,MAR/B,OAQwCf,cARxC,CADF,CA3CF,eAyDE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzDF,eA2DE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,gBAAT;AAA0B,MAAA,EAAE,EAAC,gBAA7B;AAA8C,MAAA,SAAS,EAAC,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA3DF,eA+DE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAC,WADL;AAEE,MAAA,SAAS,EAAEF,UAAU,CAAC,oCAAD,EAAuC;AAC1DyB,QAAAA,QAAQ,EAAE,KAAKT,cAAL;AADgD,OAAvC,CAFvB;AAKE,MAAA,EAAE,EAAC,cALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AACE,MAAA,GAAG,EAAEU,QADP;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAHT;AAIE,MAAA,SAAS,EAAC,MAJZ;AAKE,MAAA,GAAG,EAAC,aALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,SA/DF,CADF;AAkFD;;AAhHwD","sourcesContent":["import React from \"react\";\nimport saveIcon from \"../../icons/save.svg\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport { Link } from \"react-router-dom\";\n\nconst memoryCard = memoryCards[2];\n\nexport default class CreateImagery extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"in here\");\n    this.state = {\n      answerText: memoryCard.answer,\n      imageryText: memoryCard.imagery,\n    };\n  }\n\n  checkTextLimit() {\n    if (\n      this.state.answerText.length > MAX_CARD_CHARS ||\n      this.state.answerText.length === 0 ||\n      this.state.imageryText.length > MAX_CARD_CHARS ||\n      this.state.imageryText.length === 0\n    ) {\n      return true;\n    } else return false;\n  }\n\n  setImageryText(e) {\n    this.setState({ imageryText: e.target.value });\n  }\n\n  setAnswerText(e) {\n    this.setState({ answerText: e.target.value });\n  }\n\n  render() {\n    return (\n      <AppTemplate>\n        <h4 className=\"my-4 text-center text-muted\">Add memorable imagery</h4>\n\n        {/* Card */}\n        <div className=\"mb-2\">\n          <div className=\"card bg-primary\">\n            <div className=\"card-body\">\n              {/* <textarea\n                rows=\"11\"\n                className=\"d-sm-none\"\n                autoFocus={true}\n              ></textarea> */}\n              <textarea\n                rows=\"8\"\n                defaultValue={memoryCard.imagery}\n                autoFocus\n                onChange={(e) => this.setImageryText(e)}\n              ></textarea>\n            </div>\n          </div>\n\n          <div className=\"card bg-secondary\">\n            <div className=\"card-body\">\n              <textarea\n                rows=\"8\"\n                defaultValue={memoryCard.answer}\n                autoFocus\n                onChange={(e) => this.setAnswerText(e)}\n              ></textarea>\n            </div>\n          </div>\n        </div>\n\n        {/* Character counter */}\n        <p className=\"float-right mt-2 mb-5 text-muted\">\n          <span\n            className={classnames({\n              \"text-danger\": checkIsOver(this.state.answerText, MAX_CARD_CHARS),\n            })}\n          >\n            Bottom: {this.state.answerText.length}/{MAX_CARD_CHARS}\n          </span>\n        </p>\n        <p className=\"float-left mt-2 mb-5 text-muted\">\n          <span\n            className={classnames({\n              \"text-danger\": checkIsOver(\n                this.state.imageryText,\n                MAX_CARD_CHARS\n              ),\n            })}\n          >\n            Top: {this.state.imageryText.length}/{MAX_CARD_CHARS}\n          </span>\n        </p>\n\n        {/* Clears float */}\n        <div className=\"clearfix\"></div>\n\n        <Link to=\"/create-answer\" id=\"delete-imagery\" className=\"btn btn-link\">\n          Back to answer\n        </Link>\n\n        <Link\n          to=\"all-cards\"\n          className={classnames(\"btn btn-lg btn-primary float-right\", {\n            disabled: this.checkTextLimit(),\n          })}\n          id=\"save-imagery\"\n        >\n          <img\n            src={saveIcon}\n            width=\"20px\"\n            style={{ marginBottom: \"3px\" }}\n            className=\"mr-2\"\n            alt=\"save button\"\n          />\n          Save\n        </Link>\n      </AppTemplate>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}