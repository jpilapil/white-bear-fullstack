{"ast":null,"code":"var _jsxFileName = \"/Users/justin/code/white-bear-fullstack/client/src/components/ui/SignUp.js\";\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { withRouter } from \"react-router-dom\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisplayingInputs: false,\n      emailError: \"\",\n      passwordError: \"\",\n      hasEmailError: false,\n      hasPasswordError: false\n    };\n  }\n\n  showInputs() {\n    this.setState({\n      isDisplayingInputs: true\n    });\n  } // email error messages\n\n\n  async setEmailState(emailInput) {\n    const lowerCasedEmailInput = emailInput.toLowerCase();\n    if (emailInput === \"\") this.setState({\n      emailError: \"Please enter your email address.\",\n      hasEmailError: true\n    });else if (EMAIL_REGEX.test(lowerCasedEmailInput) === false) {\n      this.setState({\n        emailError: \"Please enter a valid email address.\",\n        hasEmailError: true\n      });\n    } else {\n      this.setState({\n        emailError: \"\",\n        hasEmailError: false\n      });\n    }\n  }\n\n  checkHasLocalPart(passwordInput, emailInput) {\n    const localPart = emailInput.split(\"@\")[0];\n    if (localPart === \"\") return false;else if (localPart.length < 4) return false;else return passwordInput.includes(localPart);\n  } // password error messages\n\n\n  async setPasswordState(passwordInput, emailInput) {\n    const uniqChars = [...new Set(passwordInput)];\n\n    if (passwordInput === \"\") {\n      this.setState({\n        passwordError: \"Please create a password.\",\n        hasPasswordError: true\n      });\n    } else if (passwordInput.length < 9) {\n      this.setState({\n        passwordError: \"Your password must be at least 9 characters.\",\n        hasPasswordError: true\n      });\n    } else if (this.checkHasLocalPart(passwordInput, emailInput)) {\n      this.setState({\n        passwordError: \"Your password cannot contain your email address.\",\n        hasPasswordError: true\n      });\n    } else if (uniqChars.length < 3) {\n      this.setState({\n        passwordError: \"Your password must contain at least 3 unique characters.\",\n        hasPasswordError: true\n      });\n    } else {\n      this.setState({\n        passwordError: \"\",\n        hasPasswordError: false\n      });\n    }\n  }\n\n  async validateAndCreateUser() {\n    // email cant be blank\n    // must have valid email regex\n    const emailInput = document.getElementById(\"signup-email-input\").value;\n    const passwordInput = document.getElementById(\"signup-password-input\").value;\n    await this.setEmailState(emailInput);\n    await this.setPasswordState(passwordInput, emailInput);\n\n    if (this.state.hasEmailError === false && this.state.hasPasswordError === false) {\n      const user = {\n        id: getUuid(),\n        email: emailInput,\n        password: hash(passwordInput),\n        createdAt: Date.now()\n      };\n      console.log(\"created user object for POST: \", user); // mimis api response\n\n      axios.get(\"https://raw.githubusercontent.com/jpilapil/white-bear-mpa/master/src/mock-data/user.json\").then(res => {\n        const currentUser = res.data;\n        console.log(currentUser);\n        this.props.dispatch({\n          type: actions.UPDATE_CURRENT_USER,\n          payload: res.data\n        });\n      }).catch(error => {\n        // handle error\n        console.log(error);\n      });\n      this.props.history.push(\"/create-answer\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-5 offset-lg-1 col-md-8 offset-md-2 col-10 offset-1 col-xl-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"inside-card\",\n      className: \"card mt-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sign-up-card\",\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-title \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Nice to meet you\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text-landing \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"Sign up for White Bear. Free forever.\"), this.state.isDisplayingInputs && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text-landing sign-up-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"Let's get you signed up.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      htmlFor: \"signup-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: classnames({\n        \"form-control\": true,\n        \"mb-2\": true,\n        \"is-invalid\": this.state.emailError\n      }),\n      id: \"signup-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    })), this.state.hasEmailError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      htmlFor: \"signup-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames({\n        \"form-control\": true,\n        \"mb-2\": true,\n        \"is-invalid\": this.state.hasPasswordError\n      }),\n      id: \"signup-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    })), this.state.hasPasswordError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(\"button\", {\n      to: \"/create-answer\",\n      id: \"letsGo\",\n      className: \"btn btn-success btn-lg btn-block btn-lg landing-Link mt-5\",\n      onClick: () => {\n        this.validateAndCreateUser();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, \"Let's go!\")), \";\", !this.state.isDisplayingInputs && /*#__PURE__*/React.createElement(\"button\", {\n      id: \"sign-up-button\",\n      className: \"btn btn-success btn-lg btn-block btn-lg landing-button\",\n      onClick: () => {\n        this.showInputs();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, \"Sign up\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // map state to props in local component\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps)(SignUp));","map":{"version":3,"sources":["/Users/justin/code/white-bear-fullstack/client/src/components/ui/SignUp.js"],"names":["React","classnames","hash","v4","getUuid","withRouter","EMAIL_REGEX","axios","actions","connect","SignUp","Component","constructor","props","state","isDisplayingInputs","emailError","passwordError","hasEmailError","hasPasswordError","showInputs","setState","setEmailState","emailInput","lowerCasedEmailInput","toLowerCase","test","checkHasLocalPart","passwordInput","localPart","split","length","includes","setPasswordState","uniqChars","Set","validateAndCreateUser","document","getElementById","value","user","id","email","password","createdAt","Date","now","console","log","get","then","res","currentUser","data","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","history","push","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { withRouter } from \"react-router-dom\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisplayingInputs: false,\n      emailError: \"\",\n      passwordError: \"\",\n      hasEmailError: false,\n      hasPasswordError: false,\n    };\n  }\n\n  showInputs() {\n    this.setState({\n      isDisplayingInputs: true,\n    });\n  }\n\n  // email error messages\n  async setEmailState(emailInput) {\n    const lowerCasedEmailInput = emailInput.toLowerCase();\n\n    if (emailInput === \"\")\n      this.setState({\n        emailError: \"Please enter your email address.\",\n        hasEmailError: true,\n      });\n    else if (EMAIL_REGEX.test(lowerCasedEmailInput) === false) {\n      this.setState({\n        emailError: \"Please enter a valid email address.\",\n        hasEmailError: true,\n      });\n    } else {\n      this.setState({ emailError: \"\", hasEmailError: false });\n    }\n  }\n\n  checkHasLocalPart(passwordInput, emailInput) {\n    const localPart = emailInput.split(\"@\")[0];\n    if (localPart === \"\") return false;\n    else if (localPart.length < 4) return false;\n    else return passwordInput.includes(localPart);\n  }\n\n  // password error messages\n  async setPasswordState(passwordInput, emailInput) {\n    const uniqChars = [...new Set(passwordInput)];\n    if (passwordInput === \"\") {\n      this.setState({\n        passwordError: \"Please create a password.\",\n        hasPasswordError: true,\n      });\n    } else if (passwordInput.length < 9) {\n      this.setState({\n        passwordError: \"Your password must be at least 9 characters.\",\n        hasPasswordError: true,\n      });\n    } else if (this.checkHasLocalPart(passwordInput, emailInput)) {\n      this.setState({\n        passwordError: \"Your password cannot contain your email address.\",\n        hasPasswordError: true,\n      });\n    } else if (uniqChars.length < 3) {\n      this.setState({\n        passwordError:\n          \"Your password must contain at least 3 unique characters.\",\n        hasPasswordError: true,\n      });\n    } else {\n      this.setState({ passwordError: \"\", hasPasswordError: false });\n    }\n  }\n\n  async validateAndCreateUser() {\n    // email cant be blank\n    // must have valid email regex\n    const emailInput = document.getElementById(\"signup-email-input\").value;\n    const passwordInput = document.getElementById(\"signup-password-input\")\n      .value;\n    await this.setEmailState(emailInput);\n    await this.setPasswordState(passwordInput, emailInput);\n    if (\n      this.state.hasEmailError === false &&\n      this.state.hasPasswordError === false\n    ) {\n      const user = {\n        id: getUuid(),\n        email: emailInput,\n        password: hash(passwordInput),\n        createdAt: Date.now(),\n      };\n\n      console.log(\"created user object for POST: \", user);\n      // mimis api response\n      axios\n        .get(\n          \"https://raw.githubusercontent.com/jpilapil/white-bear-mpa/master/src/mock-data/user.json\"\n        )\n        .then((res) => {\n          const currentUser = res.data;\n          console.log(currentUser);\n          this.props.dispatch({\n            type: actions.UPDATE_CURRENT_USER,\n            payload: res.data,\n          });\n        })\n        .catch((error) => {\n          // handle error\n          console.log(error);\n        });\n\n      this.props.history.push(\"/create-answer\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-lg-5 offset-lg-1 col-md-8 offset-md-2 col-10 offset-1 col-xl-4\">\n        {/* first login card */}\n        <div id=\"inside-card\" className=\"card mt-6\">\n          <div id=\"sign-up-card\" className=\"card-body\">\n            <h2 className=\"card-title \">Nice to meet you</h2>\n            <p className=\"card-text-landing \">\n              Sign up for White Bear. Free forever.\n            </p>\n            {this.state.isDisplayingInputs && (\n              <div>\n                <p className=\"card-text-landing sign-up-text\">\n                  Let's get you signed up.\n                </p>\n                <div className=\"form-group\">\n                  <label className=\"text-muted\" htmlFor=\"signup-email-input\">\n                    Email address\n                  </label>\n                  <input\n                    type=\"email\"\n                    className={classnames({\n                      \"form-control\": true,\n                      \"mb-2\": true,\n                      \"is-invalid\": this.state.emailError,\n                    })}\n                    id=\"signup-email-input\"\n                  />\n                </div>\n                {/* email error message */}\n                {this.state.hasEmailError && (\n                  <p className=\"text-danger\">{this.state.emailError}</p>\n                )}\n                <div className=\"form-group\">\n                  <label className=\"text-muted\" htmlFor=\"signup-password-input\">\n                    Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    className={classnames({\n                      \"form-control\": true,\n                      \"mb-2\": true,\n                      \"is-invalid\": this.state.hasPasswordError,\n                    })}\n                    id=\"signup-password-input\"\n                  />\n                </div>\n                {/* password error messages */}\n                {this.state.hasPasswordError && (\n                  <p className=\"text-danger\">{this.state.passwordError}</p>\n                )}\n                <button\n                  to=\"/create-answer\"\n                  id=\"letsGo\"\n                  className=\"btn btn-success btn-lg btn-block btn-lg landing-Link mt-5\"\n                  onClick={() => {\n                    this.validateAndCreateUser();\n                  }}\n                >\n                  Let's go!\n                </button>\n              </div>\n            )}\n            ;\n            {!this.state.isDisplayingInputs && (\n              <button\n                id=\"sign-up-button\"\n                className=\"btn btn-success btn-lg btn-block btn-lg landing-button\"\n                onClick={() => {\n                  this.showInputs();\n                }}\n              >\n                Sign up\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  // map state to props in local component\n  return {};\n}\nexport default withRouter(connect(mapStateToProps)(SignUp));\n"]},"metadata":{},"sourceType":"module"}