{"ast":null,"code":"var _jsxFileName = \"/Users/justin/code/white-bear-fullstack/client/src/components/pages/Edit.js\";\nimport React from \"react\";\nimport saveIcon from \"../../icons/save.svg\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport { Link } from \"react-router-dom\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport toDisplayDate from \"date-fns/format\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport without from \"lodash/without\";\nimport actions from \"../../store/actions\";\nconst memoryCard = memoryCards[2];\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answerText: memoryCard.answer,\n      imageryText: memoryCard.imagery,\n      isDeleteChecked: false\n    };\n  }\n\n  checkTextLimit() {\n    if (this.state.answerText.length > MAX_CARD_CHARS || this.state.answerText.length === 0 || this.state.imageryText.length > MAX_CARD_CHARS || this.state.imageryText.length === 0) {\n      return true;\n    } else return false;\n  }\n\n  setImageryText(e) {\n    this.setState({\n      imageryText: e.target.value\n    });\n  }\n\n  setAnswerText(e) {\n    this.setState({\n      answerText: e.target.value\n    });\n  }\n\n  showDeleteButton() {\n    this.setState({\n      isDeleteChecked: !this.state.isDeleteChecked\n    });\n  }\n\n  deleteCard() {\n    //TODO: DELETE FROM DATABASSE\n    if (this.props.editableCard.prevRoute === \"/review-answer\") {\n      this.deleteCardFromStore();\n    }\n\n    if (this.props.editableCard.prevRoute === \"/all-cards\") {\n      this.props.history.push(\"/all-cards\");\n    }\n  }\n\n  deleteCardFromStore() {\n    const deletedCard = this.props.editableCard.card; // console.log(deletedCard);\n\n    const cards = this.props.queue.cards; // console.log(cards);\n    // const filteredCards = cards.filter((card) => {\n    //   if (card !== deletedCard) {\n    //     return card;\n    //   }\n    // });\n\n    const filteredCards = without(cards, deletedCard);\n    console.log(filteredCards);\n    this.props.dispatch({\n      type: actions.STORE_QUEUED_CARDS,\n      payload: filteredCards\n    });\n\n    if (filteredCards[this.props.queue.index] === undefined) {\n      this.props.history.push(\"/review-empty\");\n    } else {\n      this.props.history.push(\"/review-imagery\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppTemplate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"my-4 text-center text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Edit card\"), isEmpty(this.props.editableCard) === false && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"8\",\n      defaultValue: this.props.editableCard.card.imagery,\n      autoFocus: true,\n      onChange: e => this.setImageryText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card bg-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"8\",\n      defaultValue: this.props.editableCard.card.answer,\n      autoFocus: true,\n      onChange: e => this.setAnswerText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"float-right mt-2 mb-5 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.answerText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Bottom: \", this.state.answerText.length, \"/\", MAX_CARD_CHARS)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"float-left mt-2 mb-5 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.imageryText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Top: \", this.state.imageryText.length, \"/\", MAX_CARD_CHARS)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: this.props.editableCard.prevRoute,\n      id: \"discard-changes\",\n      className: \"btn btn-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Discard changes\"), /*#__PURE__*/React.createElement(Link, {\n      to: this.props.editableCard.prevRoute,\n      className: classnames(\"btn btn-lg btn-primary float-right\", {\n        disabled: this.checkTextLimit()\n      }),\n      id: \"save-imagery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: saveIcon,\n      width: \"20px\",\n      style: {\n        marginBottom: \"3px\"\n      },\n      className: \"mr-2\",\n      alt: \"save button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }), \"Save\"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-center mt-5 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \"Card properties\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted col-4 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, \"Created:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }), \"Last attempt:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }), \"Next Attempt:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }), \"Consecutives:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, toDisplayDate(this.props.editableCard.card.createdAt, \"MMM. d, y\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }), toDisplayDate(this.props.editableCard.card.lastAttemptAt, \"MMM. d, y\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }), toDisplayDate(this.props.editableCard.card.nextAttemptAt, \"MMM. d, y\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }), this.props.editableCard.card.totalSuccessfulAttempts, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox mb-4 col-12 ml-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"show-delete\",\n      onClick: () => {\n        // on click, runs showDeleteButton func\n        this.showDeleteButton();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label text-muted\",\n      htmlFor: \"show-delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, \"Show Delete Button\")), this.state.isDeleteChecked &&\n    /*#__PURE__*/\n    // if isDeleteChecked = true, show delete button\n    React.createElement(\"button\", {\n      className: \"btn btn-lg btn-outline-danger ml-3\",\n      id: \"delete-card\",\n      onClick: () => {\n        this.deleteCard();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \"Delete this card\"))));\n  }\n\n} // map the gloabal state from redux to the local properties of this component\n\n\nfunction mapStateToProps(state) {\n  return {\n    editableCard: state.editableCard,\n    queue: state.queue\n  };\n}\n\nexport default connect(mapStateToProps)(Edit);","map":{"version":3,"sources":["/Users/justin/code/white-bear-fullstack/client/src/components/pages/Edit.js"],"names":["React","AppTemplate","Link","memoryCards","toDisplayDate","classnames","checkIsOver","MAX_CARD_CHARS","connect","isEmpty","without","actions","memoryCard","Edit","Component","constructor","props","state","answerText","answer","imageryText","imagery","isDeleteChecked","checkTextLimit","length","setImageryText","e","setState","target","value","setAnswerText","showDeleteButton","deleteCard","editableCard","prevRoute","deleteCardFromStore","history","push","deletedCard","card","cards","queue","filteredCards","console","log","dispatch","type","STORE_QUEUED_CARDS","payload","index","undefined","render","disabled","saveIcon","marginBottom","createdAt","lastAttemptAt","nextAttemptAt","totalSuccessfulAttempts","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport saveIcon from \"../../icons/save.svg\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport { Link } from \"react-router-dom\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport toDisplayDate from \"date-fns/format\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport without from \"lodash/without\";\nimport actions from \"../../store/actions\";\n\nconst memoryCard = memoryCards[2];\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      answerText: memoryCard.answer,\n      imageryText: memoryCard.imagery,\n      isDeleteChecked: false,\n    };\n  }\n\n  checkTextLimit() {\n    if (\n      this.state.answerText.length > MAX_CARD_CHARS ||\n      this.state.answerText.length === 0 ||\n      this.state.imageryText.length > MAX_CARD_CHARS ||\n      this.state.imageryText.length === 0\n    ) {\n      return true;\n    } else return false;\n  }\n\n  setImageryText(e) {\n    this.setState({ imageryText: e.target.value });\n  }\n\n  setAnswerText(e) {\n    this.setState({ answerText: e.target.value });\n  }\n\n  showDeleteButton() {\n    this.setState({ isDeleteChecked: !this.state.isDeleteChecked });\n  }\n\n  deleteCard() {\n    //TODO: DELETE FROM DATABASSE\n    if (this.props.editableCard.prevRoute === \"/review-answer\") {\n      this.deleteCardFromStore();\n    }\n    if (this.props.editableCard.prevRoute === \"/all-cards\") {\n      this.props.history.push(\"/all-cards\");\n    }\n  }\n\n  deleteCardFromStore() {\n    const deletedCard = this.props.editableCard.card;\n    // console.log(deletedCard);\n    const cards = this.props.queue.cards;\n    // console.log(cards);\n    // const filteredCards = cards.filter((card) => {\n    //   if (card !== deletedCard) {\n    //     return card;\n    //   }\n    // });\n    const filteredCards = without(cards, deletedCard);\n    console.log(filteredCards);\n    this.props.dispatch({\n      type: actions.STORE_QUEUED_CARDS,\n      payload: filteredCards,\n    });\n    if (filteredCards[this.props.queue.index] === undefined) {\n      this.props.history.push(\"/review-empty\");\n    } else {\n      this.props.history.push(\"/review-imagery\");\n    }\n  }\n\n  render() {\n    return (\n      <AppTemplate>\n        <h4 className=\"my-4 text-center text-muted\">Edit card</h4>\n        {isEmpty(this.props.editableCard) === false && (\n          <>\n            <div className=\"mb-2\">\n              <div className=\"card bg-primary\">\n                <div className=\"card-body\">\n                  <textarea\n                    rows=\"8\"\n                    defaultValue={this.props.editableCard.card.imagery}\n                    autoFocus\n                    onChange={(e) => this.setImageryText(e)}\n                  ></textarea>\n                </div>\n              </div>\n\n              <div className=\"card bg-secondary\">\n                <div className=\"card-body\">\n                  <textarea\n                    rows=\"8\"\n                    defaultValue={this.props.editableCard.card.answer}\n                    autoFocus\n                    onChange={(e) => this.setAnswerText(e)}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n            {/* Character count */}\n\n            <p className=\"float-right mt-2 mb-5 text-muted\">\n              <span\n                className={classnames({\n                  \"text-danger\": checkIsOver(\n                    this.state.answerText,\n                    MAX_CARD_CHARS\n                  ),\n                })}\n              >\n                Bottom: {this.state.answerText.length}/{MAX_CARD_CHARS}\n              </span>\n            </p>\n            <p className=\"float-left mt-2 mb-5 text-muted\">\n              <span\n                className={classnames({\n                  \"text-danger\": checkIsOver(\n                    this.state.imageryText,\n                    MAX_CARD_CHARS\n                  ),\n                })}\n              >\n                Top: {this.state.imageryText.length}/{MAX_CARD_CHARS}\n              </span>\n            </p>\n\n            {/* Clear float */}\n            <div className=\"clearfix\"></div>\n            <Link\n              to={this.props.editableCard.prevRoute}\n              id=\"discard-changes\"\n              className=\"btn btn-link\"\n            >\n              Discard changes\n            </Link>\n            <Link\n              to={this.props.editableCard.prevRoute}\n              className={classnames(\"btn btn-lg btn-primary float-right\", {\n                disabled: this.checkTextLimit(),\n              })}\n              id=\"save-imagery\"\n            >\n              <img\n                src={saveIcon}\n                width=\"20px\"\n                style={{ marginBottom: \"3px\" }}\n                className=\"mr-2\"\n                alt=\"save button\"\n              />\n              Save\n            </Link>\n            {/* Card props and delete card */}\n            <h4 className=\"text-center mt-5 text-muted\">Card properties</h4>\n            <div className=\"row mt-5\">\n              <p className=\"text-muted col-4 mb-5\">\n                Created:\n                <br />\n                Last attempt:\n                <br />\n                Next Attempt:\n                <br />\n                Consecutives:\n                <br />\n              </p>\n              <p className=\"col-5\">\n                {toDisplayDate(\n                  this.props.editableCard.card.createdAt,\n                  \"MMM. d, y\"\n                )}{\" \"}\n                <br />\n                {toDisplayDate(\n                  this.props.editableCard.card.lastAttemptAt,\n                  \"MMM. d, y\"\n                )}\n                <br />\n                {toDisplayDate(\n                  this.props.editableCard.card.nextAttemptAt,\n                  \"MMM. d, y\"\n                )}\n                <br />\n                {this.props.editableCard.card.totalSuccessfulAttempts}\n                <br />\n              </p>\n\n              <div className=\"custom-control custom-checkbox mb-4 col-12 ml-3 \">\n                <input\n                  type=\"checkbox\"\n                  className=\"custom-control-input\"\n                  id=\"show-delete\"\n                  onClick={() => {\n                    // on click, runs showDeleteButton func\n                    this.showDeleteButton();\n                  }}\n                />\n                <label\n                  className=\"custom-control-label text-muted\"\n                  htmlFor=\"show-delete\"\n                >\n                  Show Delete Button\n                </label>\n              </div>\n              {this.state.isDeleteChecked && ( // if isDeleteChecked = true, show delete button\n                <button\n                  className=\"btn btn-lg btn-outline-danger ml-3\"\n                  id=\"delete-card\"\n                  onClick={() => {\n                    this.deleteCard();\n                  }}\n                >\n                  Delete this card\n                </button>\n              )}\n            </div>\n          </>\n        )}\n      </AppTemplate>\n    );\n  }\n}\n\n// map the gloabal state from redux to the local properties of this component\nfunction mapStateToProps(state) {\n  return {\n    editableCard: state.editableCard,\n    queue: state.queue,\n  };\n}\nexport default connect(mapStateToProps)(Edit);\n"]},"metadata":{},"sourceType":"module"}